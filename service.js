const util = require('util');
const { Scanner } = require('nnmap.js');
const nodeNmap = require('node-nmap');
const nodeNmapVulners = require('node-nmap-vulners');
const { NmapScan } = require('network-mapper');

//test request at
/* 
  http://testphp.vulnweb.com/
  http://scanme.nmap.org/
*/

/*
  nnmap.js
  https://www.npmjs.com/package/nnmap.js#example-usage
  https://github.com/marzavec/nnmap.js
*/
exports.scanner = async(target) => {
  const { host } = target;
  console.log(`\n req ${JSON.stringify(target)} \n`)

  const scanner = await new Promise((resolve, reject) => {
    return new Scanner({
      target: `-sV --script=http-sql-injection ${host}`,
      profile: 'Quick scan',
      onScanComplete: (nmapOut) => {
        resolve(util.inspect(nmapOut.scanData.data, false, null, true))
      },
    });
  })
  console.log(`\n scanner ${scanner} \n`)

  return scanner
}

// too little info
exports.scannerOne = async(target) => {
  const { host } = target;
  console.log(`\n req ${JSON.stringify(target)} \n`)

  // nodeNmap.nmapLocation = 'nmap'; //default

  const scanner = await new Promise((resolve, reject) => {
    // const scan = new nodeNmap.NmapScan([`${host}`], ['-sV', '--script=http-sql-injection']);
    const scan = new nodeNmap.NmapScan(host, '--script=http-sql-injection');

    scan.on('complete', function(data){
      console.log(`\n complete ${JSON.stringify(data)} \n`);
      console.log(`\n total scan time ${scan.scanTime} \n`);
      // resolve({ hosts, raw: nmapscan.rawData, version: nmapscan.nmapVersion })
      resolve(data)
    });
    
    scan.on('error', function(error){
      console.log(`\n error ${error} \n`);
      reject(error)
    });
    
    scan.startScan();
  })
  console.log(`\n scanner ${JSON.stringify(scanner)} \n`)

  return scanner
}

// mimic -> node-nmap
exports.scannerTwo = async(target) => {
  const { host } = target;
  console.log(`\n req ${JSON.stringify(target)} \n`)

  // nodeNmapVulners.nmapLocation = 'nmap'; //default

  const scanner = await new Promise((resolve, reject) => {
    // const scan = new nodeNmapVulners.NmapScan([`${host}`], ['-sV', '--script=http-sql-injection']);
    const scan = new nodeNmapVulners.NmapScan(host, '--script=http-sql-injection');
    // const scan = new nodeNmapVulners.NmapScan(`${host} -sV --script=http-sql-injection`);

    scan.on('complete', function(data){
      console.log(`\n complete ${JSON.stringify(data)} \n`);
      console.log(`\n total scan time ${scan.scanTime} \n`);
      resolve(data)
    });
    
    scan.on('error', function(error){
      console.log(`\n error ${error} \n`);
      reject(error)
    });
    
    scan.startScan();
  })
  console.log(`\n scanner ${JSON.stringify(scanner)} \n`)

  return scanner
}

// the same result of  node-nmap
exports.scannerThree = async(target) => {
  const { host } = target;
  console.log(`\n req ${JSON.stringify(target)} \n`)

  const scan = new NmapScan({
    target: host,
    scanType: 'ping-scan',
    // dnsServer: ['8.8.8.8', '8.8.4.4'],
    // resolve: 'all',
    // traceroute: true
  })

  const scanner = await scan.run()

  // console.log(`\n scanner ${JSON.stringify(scanner)} \n`)
  return scanner
}